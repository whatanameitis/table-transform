plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.avast.gradle.docker-compose' version '0.7.1'
}

group = 'ru.karpunin.table-tranform'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    options.compilerArgs += ['-Amapstruct.unmappedTargetPolicy=ERROR', '-Amapstruct.defaultComponentModel=spring']
}

repositories {
    mavenCentral()
}

dependencies {
    //Spring dependencies
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.5'

    //Swagger dependencies
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //Test dependencies
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.testcontainers:postgresql:1.17.1'
    testImplementation 'org.testcontainers:testcontainers:1.17.1'
    testImplementation 'org.testcontainers:testcontainers-bom:1.17.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.5'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //MapStruct dependencies
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // JDBI dependencies
    implementation 'org.jdbi:jdbi3-sqlobject:3.41.3'
    implementation 'org.jdbi:jdbi3-postgres:3.41.3'
    implementation 'org.jdbi:jdbi3-spring4:3.19.0'

    //PostgreSQL + Flyway
    runtimeOnly 'org.postgresql:postgresql:42.6.0'
    implementation 'org.flywaydb:flyway-core'
}

ext['junit-jupiter.version'] = '5.10.0'

tasks.named('test') {
    useJUnitPlatform()
}

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
}

bootJar {
    archiveFileName = "shiftapp_intensive.jar"
}
